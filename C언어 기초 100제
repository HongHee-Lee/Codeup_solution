#1001번
#include <stdio.h>

int main()
{
	printf("Hello");
	return 0;
}

#1002번
#include <stdio.h>

int main()
{
	printf("Hello World");
	return 0;
}

#1003번
#include <stdio.h>

int main()
{
	printf("Hello\n");                 //         \n 은 줄바꿈
	printf("World");
	return 0;
} 



printf("Hello\n");
printf("World");

둘이 같음

printf("Hello\nWorld");
	
                                      //    // 은 주석처리


#1004

#include <stdio.h>

int main() {
	printf("\'Hello\'");            //printf('')는 오류뜸 / #printf("")로 해줘야

	return 0;
} 

#1005
#include <stdio.h>

int main() {
	printf("\"Hello World\"");

	return 0;
} 

//1006번
#include <stdio.h>

int main() 
{
	printf("\"!@#$%%^&*()\"");                 //  %%의 출력

	return 0;
}


//1007 백슬래시 \ 의 출력은 \\로
#include <stdio.h>

int main() 
{
	printf("\"C:\\Download\\hello.cpp\"");

	return 0;
} 

//1008
┌┬┐ 특수문자의 출력
├┼┤
└┴┘
#include <stdio.h>

int main()
{
	printf("\u250C\u252C\u2510\n");            // \u250C
	printf("\u251C\u253C\u2524\n");
	printf("\u2514\u2534\u2518\n");

	return 0;
}


------------------------------------------------------------------

변수와 자료형
변수 : 어떤 값을 저장하는 공간
메모리 : 연속된 바이트의 모임 / 메모리에 접근할 때는 1 바이트 단위로 접근
문자 'A' 1byte 
정수 123 4byte
실수 3.14 4byte

00 2bit
0 1 bit (한칸은 1 비트)

한칸(1bit)은 두가지
두칸(2bit)은 네개
세칸(3bit)은 8개 표현가능
8bit로는 256개 표현가능

8bit = 1 byte
1024byte = 1KB
1024KB = 1MB
1024MB = 1GB
1024 GB = 1TB
//1010번


char ch;
int n;
float f;



----------------------
강의 공부 
#include <stdio.h>

int main()
{
	int n;       //변수 선언
	int k;  
	n=5;      //  =의 뜻 : n이라는 메모리(저장공간)에 저장해라   n은 변수 
	             // ==같다
	k=7;
	printf("변수 n의 값은 정수 %d, 변수 k의 값은 %d 입니다.",n,k);       //10진 정수// n에 들어있는 값을 가지고 와서 %d에 찍어줘라 
	return 0;
}

stdio에 scanf가 들어있어서 가지고 옴(1010번)
scanf("%d", &n); %d의 형식으로 가지고 와서 &n에 저장하겠다.

------------------------------------------------------------------


//1010


#include <stdio.h>

int main()
{
	int n;       //변수 선언
	scanf("%d",&n);   //읽어들이기 (저장이 필요) --> scan은 키보드로 읽어왔다는 뜻.  //표준 입력장치 ->키보드 입력 
	printf("%d", n);       //10진 정수// n에 들어있는 값을 가지고 와서 %d에 찍어줘라  //표준 출력장치->모니터 출력 
	return 0;
} 

//1011
11번문제 링크 
https://www.youtube.com/watch?v=SthyNGsatK4&list=PLVXWi4DVy7TexhDLSS8L5xEMEOygreQPj&index=10

#include <stdio.h>

int main() {
	char x;
	scanf("%c", &x); //c에 있는걸 주소 x에 저장하겠다 
	printf("%c",x);  //x에 저장되있는걸 character 형식으로 출력하겠다.
	return 0; 
}


줄바꿈\n과 10진 형태%d를 사용한 출력
#include <stdio.h>

int main() {
	char x;
	scanf("%c", &x); //c에 있는걸 주소 x에 저장하겠다 
	printf("%c\n",x);  //x에 저장되있는걸 character 형식으로 출력하겠다.
	printf("%d", &x);  //x라는 주소를 가지고 와서 10진 형태(%d)로 찍어라  
	return 0; 
}



추가적 공부
#include <stdio.h>

int main() {
	char x,z;
	scanf("%c %c", &x,&z); //c에 있는걸 주소 x에 저장하겠다 //2개를 받아들이겠다 
	printf("%c %c\n",x, z);  //xz에 저장되있는걸 character 형식으로 출력하겠다.
	printf("%d %d", &x,&z);  //xz라는 주소를 가지고 와서 10진 형태(%d)로 찍어라  
	return 0; 
}

                                                              //&는 주소를 나타낸다
                                                             //printf 에서 &x는 x의 주소를 출력하겠다는 뜻 



-----------------------------
형식 외우기
#include <stdio.h>

int main() {
	scanf("입력 받을 형식지정자 %d", 저장할 변수주소);                        // &   (and, ampersand, 앰퍼센드라고 읽는다.)
	printf("출력할 내용 및 형식지정자 %");
	return 0;
}
-----------------------------


//1012
https://www.youtube.com/watch?v=YCwF_z4ku2w&list=PLVXWi4DVy7TexhDLSS8L5xEMEOygreQPj&index=11
https://codeup.kr/problem.php?id=1012
위 주소 사진 참고

#include <stdio.h>

int main() {
	float x;
	scanf("%f", &x);
	printf("%f",x);
	return 0;
}




//1013
https://codeup.kr/problem.php?id=1013
https://www.youtube.com/watch?v=K8xYfxRtDl0&list=PLVXWi4DVy7TexhDLSS8L5xEMEOygreQPj&index=12

#include <stdio.h>

int main() {
	int a,b;
	scanf("%d%d",&a, &b);      // 엔터 또는 공백으로 입력 데이터가 구분되어 입력된다(엔터쳐봐~ 쉽게 이해됨)
	printf("%d %d", a, b);
	return 0;
}

//1014
#include <stdio.h>

int main() {
	char x,y;
	scanf("%c %c",&x,&y); //읽어 들이겠다 
	printf("%c %c", y,x);
	return 0;
}


//1015
https://codeup.kr/problem.php?id=1015
https://www.youtube.com/watch?v=btm5Dyp0KYs&list=PLVXWi4DVy7TexhDLSS8L5xEMEOygreQPj&index=14
결과를 소수점 셋 째 자리에서 반올림 해, 소숫점 이하 둘째 자리까지 출력한다.
(%.2f를 이용하면 된다.)

//include : 지시문(선언하는거 )
지시문이 나타나는 지점에서 지정된 파일의 내용을 포함하도록 전처리기에 지시 합니다.


#include <stdio.h>

int main() {
	float fn;
	scanf("%f", &fn);
	printf("%.2f", fn);    // %.2f 결과를 소수점 셋 째 자리에서 반올림 해, 소숫점 이하 둘째 자리까지 출력한다.
	return 0;
} 


//1017
#include <stdio.h>

int main() {
	int good=1024;                  //;안붙이는 실수 조심 //아래 scanf 에서 good값은 덮어써짐 
	scanf("%d", &good);                      // "%d %d %d" 세번 찍는 잘못 
	printf("%d %d %d", good, good,good);
	return 0;
} 


//1018 시간 입력받아 그대로 출력하기
https://codeup.kr/problem.php?id=1018
https://www.youtube.com/watch?v=dtc-p_j5h6s&list=PLVXWi4DVy7TexhDLSS8L5xEMEOygreQPj&index=16

scanf( ) 함수는 지정한 형식(format)에 따라 입력받는 함수이다.

#include <stdio.h> 

int main() {
	int h, m;
	scanf("%d:%d", &h, &m);    //3:16입력하면 :기준으로 나뉘어 저장된다 
	printf("%d:%d", h, m );
	return 0;
}

 
//1019
https://codeup.kr/problem.php?id=1019
https://www.youtube.com/watch?v=xnvuuOHN-IQ&list=PLVXWi4DVy7TexhDLSS8L5xEMEOygreQPj&index=17

#include <stdio.h>

int main() {
	int y,m,d;
	scanf("%d.%d.%d", &y,&m,&d);
	printf("%04d.%02d.%02d",y,m,d);                     //%02d  8을 08로 출력 
	return 0;
}


//2020(c언어 최초로 순수하게 내가 홀로 낸 옳은 답)
#include <stdio.h>

int main() {
	int A,B;
	scanf("%d-%d",&A,&B);
	printf("%06d%07d",A,B);         //주민번호 앞자리 6자리 , 뒷자리 7자리 조건 
	return 0;
}

강사님이 알려준 다른방법
#include <stdio.h>

int main() {
	int a,b;
	char a1, a2, a3, a4, a5, a6;       //하나하나 문자로 입력받기 
	char b1, b2, b3, b4, b5, b6, b7;   //문자는 하나밖에 입력이안됨
	
	scanf("%c%c%c%c%c%c-%c%c%c%c%c%c%c",&a1, &a2, &a3, &a4, &a5, &a6,&b1, &b2, &b3, &b4, &b5, &b6, &b7);
	printf("%c%c%c%c%c%c%c%c%c%c%c%c%c",a1, a2, a3, a4, a5, a6,b1, b2, b3, b4, b5, b6, b7);
	return 0;
}


나혼자 공부
#include <stdio.h>

int main() {
	int A, B;
	scanf("%d-%d",&A,&B);
	printf("%100d\n%101d",A,B);                                                                       // 1 100칸 2 101칸
	return 0;
}

나 혼자 공부 실행결과 
1-2
                                                                                                   1      // 공백 99칸 1 1칸 총 100칸 추정
                                                                                                    2     //공백 100칸 2 1칸 총 101칸 추정

//2021
https://codeup.kr/problem.php?id=1021
https://www.youtube.com/watch?v=NEZv6gwNkXs&list=PLVXWi4DVy7TexhDLSS8L5xEMEOygreQPj&index=19

#include <stdio.h>

int main() {
	char data[51]="";     //char(형) data(이름) [51](개수)   -> 전부다 '배열'이라고 한다. 
	                      // \0 은 그 문자열의 끝을 나타냄 (50자 이하 + \0 ->총 '51') 
						  // 배열은 주소에 &않아도 됨 
						  //코드업 문제의 사진 참고 
	scanf("%s", data);          // %s는 문자열 즉 string 
	printf("%s", data);
	return 0;
}

//2022(공백 문자가 포함되어 있는 문장을 입력받고 그대로 출력하는 연습을 해보자.) -> fgets!
https://codeup.kr/problem.php?id=1022
https://www.youtube.com/watch?v=Q2BbepLkrEs&list=PLVXWi4DVy7TexhDLSS8L5xEMEOygreQPj&index=20

#include <stdio.h>

int main() {
	char data[2001];     //char(형) data(이름) [51](개수)   -> 전부다 '배열'이라고 한다. 
	                      // \0 은 그 문자열의 끝을 나타냄 (50자 이하 + \0 ->총 '51') 
						  // 배열은 주소에 &않아도 됨 
						  //코드업 문제의 사진 참고 
	fgets(data, 2000, stdin);                                                    // fgets(data, 2000, stdin)
	printf("%s", data);          // %s는 문자열 즉 string
	return 0;
}
hello world
hello world
                                                        //빈칸생김(엔터 입력됨)
--------------------------------

//fgets 위와 같이 실행하면 공백이 포함된 문장을 키보드(stdin)로 입력받아
//최대 2000자까지 data[ ] 공간에 저장하고 출력할 수 있다.
//stdin (표준입력장치를 통해서 의 뜻)

// hello world 입력시 공백이 잘려 hello 가 잘려 출력되는 문제를 해결할수 있음 


gets 공부!!!!

#include <stdio.h>            //<stdio.h>는 라이브러리 (헤더 파일) 

int main() {
	char data[2001];
	gets(data);                                             //gets(data);
	printf("%s", data);    
	return 0;
}
hello wolrd
hello wolrd
--------------------------------                    //(hello world아래 빈칸 없이 결과출력)



puts 공부 !!!!
#include <stdio.h>            //<stdio.h>는 라이브러리  

int main() {
	char data[2001];
	gets(data);                                     //gets(data);
	puts(data);                                    //puts(data);
	return 0;
}
hello world
hello world

--------------------------------


fputs 도 있음!!




//1023(실수 1개를 입력받아 정수 부분과 실수 부분으로 나누어 출력한다.)
https://codeup.kr/problem.php?id=1023
https://www.youtube.com/watch?v=zG97SbiidZk&list=PLVXWi4DVy7TexhDLSS8L5xEMEOygreQPj&index=21

내풀이
#include <stdio.h>

int main() {
	int a,b;
 	scanf("%d.%d", &a, &b);                  //a,b는 변수기 때문에 주소를 지정해줘야(&) 
	printf("%d\n%d",a,b); 
	return 0;
}

결과 
1
414


//1024(단어 1개 입력받아 나누어 출력하기(설명))
https://codeup.kr/problem.php?id=1024
https://www.youtube.com/watch?v=DhUHRY2BXRE&list=PLVXWi4DVy7TexhDLSS8L5xEMEOygreQPj&index=22

참고
C언어에서는 문장을 저장하기 위해 특별한 방법을 사용하지 않고,
배열이라는 연속된 공간에 문자들을 연속으로 한 개씩 저장하는 방법을 사용한다.
단, 문자열(문자가 연속적으로 연결된 줄이라는 의미. 즉 문장)의 마지막임을 나타내기 위해
문자열의 마지막에 널(NULL) 문자라는 특별한 의미를 가지는 문자를 삽입해 문장임을 나타낸다.

문자로는 '\0', 아스키문자의 정수값은 0을 의미하며 NULL 로도 사용할 수 있다.

 영문자들을 한 개씩 순차적으로 검사해서, 문장의 마지막을 나타내는 널문자가 나올 때까지 모양을 만들어 출력하면 되는 것이다.


#include <stdio.h>

int main() {
	char d[21];    // 20자 이하이다 
	scanf("%s", d);    //배열의 첫번째 주소를 가리키는 d. 주소를 나타내는 &안써줘도됨. 
	//printf("%s",d);     //하면 처음부터 끝까지 출력됨 (asdf 입력시 asdf 그대로 출력됨   
	printf("%c %c", d[0],d[3]);    // 0번째 3번째 자리 출력 asdf 입력시 a d 출력 
	return 0; 
}




0  1  2  3  4
a  s  d  f  \0

4에 널(null)값을 출력하는 방법 

#include <stdio.h>

int main() {
	char d[21];    // 20자 이하이다 
	scanf("%s", d);    //배열의 첫번째 주소를 가리키는 d. 주소를 나타내는 &안써줘도됨. 
	//printf("%s",d);     //하면 처음부터 끝까지 출력됨 (asdf 입력시 asdf 그대로 출력됨   
	printf("%c %c %s", d[0],d[3],d[4]);    // 0번째 3번째 자리 출력 asdf 입력시 a d 출력                  //printf("%s") 로 널 출력!
	return 0; 
}
결과
asdf
a f (null)
--------------------------------
printf("%s", ...); 는 결국, 저장되어있는 문자의 마지막까지, 즉 널문자가 나올 때까지 형식에 맞추어 출력해 주라는 의미를 가진다.


1024번답
//반복문으로 출력하는 방법 

#include <stdio.h>
int main() 
{
	char d[21];    // 20자 이하이다 
	int i;
	
	scanf("%s", d);    //배열의 첫번째 주소를 가리키는 d. 주소를 나타내는 &안써줘도됨. 
	//printf("%s",d);     //하면 처음부터 끝까지 출력됨 (asdf 입력시 asdf 그대로 출력됨   
	
	for(i=0; d[i]!='\0'; i++)       //i를 0으로 초기화 //i++ 는 i=i+1; 
	{
		printf("'%c'\n", d[i]);    // i 가 0,12,3,4... 계속 바뀌면 됨                 //"'%c'\n"에서 '%c'옳은 표현
    }
	return 0; 
}




//1025(정수 1개 입력받아 나누어 출력하기(설명))
https://codeup.kr/problem.php?id=1025
https://www.youtube.com/watch?v=OfLJC49OwJM&list=PLVXWi4DVy7TexhDLSS8L5xEMEOygreQPj&index=23
다섯 자리의 정수 1개를 입력받아 각 자리별로 나누어 출력한다.

#include <stdio.h>
int main() 
{
	int a,b,c,d,e; 
	scanf("%1d%1d%1d%1d%1d", &a, &b, &c, &d, &e);
	printf("[%d]\n",a*10000); 
	printf("[%d]\n",b*1000);
	printf("[%d]\n",c*100);
	printf("[%d]\n",d*10);
	printf("[%d]\n",e);
	return 0;
}

입력 75254
결과
[70000]
[5000]
[200]
[50]
[4]


다른방법 


#include <stdio.h>
int main() 
{
	int a,b,c,d,e; 
	int z = 0; 
	scanf("%1d%1d%1d%1d%1d", &a, &b, &c, &d, &e);
	printf("[%d%04d]\n",a,z);                                  //("[%d%04d]\n",a,z) 요기 이해할수 있겠어요??
	printf("[%d%03d]\n",b,z);
	printf("[%d%02d]\n",c,z);
	printf("[%d%01d]\n",d,z);
	printf("[%d]",e,z);
	return 0;
}



//1026 맞음!!!
시분초 입력받아 분만 출력하기(설명)
https://codeup.kr/problem.php?id=1026
https://www.youtube.com/watch?v=fBADWpSuqrc&list=PLVXWi4DVy7TexhDLSS8L5xEMEOygreQPj&index=24



#include <stdio.h>
int main() 
{
	int h, m, s;
	scanf("%d:%d:%d", &h, &m, &s);
	printf("%d", m);
	return 0;
}

//1027
년월일 입력 받아 형식 바꿔 출력하기(설명)
https://codeup.kr/problem.php?id=1027
https://www.youtube.com/watch?v=32aeNFnf8Yg&list=PLVXWi4DVy7TexhDLSS8L5xEMEOygreQPj&index=25

#include <stdio.h>

int main()
{
	int y,m,d;
	scanf("%d.%d.%d",&y,&m,&d);
	printf("%02d-%02d-%04d", d, m, y);


	return 0;
}
입력 예시   
2014.07.15

출력 예시
15-07-2014 



//1028
정수 1개 입력받아 그대로 출력하기2(설명)
(단, 입력되는 정수의 범위는 0 ~ 4294967295 이다.)

입력 예시   
2147483648
출력 예시
2147483648


참고
-2147483648 ~ +2147483647 범위의 정수를 저장하고 처리하기 위해서는
int 형으로 변수를 선언하면 된다.(int 로 선언하고 %d로 받고 출력)

하지만 이 범위를 넘어가는 정수를 저장하기 위해서는
보다 큰 범위를 저장할 수 있는 다른 데이터형을 사용해야 정상적으로 저장시킬 수 있다.

unsigned int 데이터형을 사용하면 0 ~ 4294967295 범위의 정수를 저장할 수 있다.


#include <stdio.h>

int main()
{
	int a=2147483647;
	printf("%d",a+1);           //a+1때문에 오버플로우가 일어남(int에선 2147483648입력 불가) 
	return 0;
}
출력 -2147483648
--------------------------------

#include <stdio.h>

int main()
{
	int a=-2147483648;
	printf("%d",a-1);           //a-1때문에 언더플로우가 일어남(int에선 -2147483649입력 불가) 
	return 0;
}
출력  2147483647
--------------------------------

#include <stdio.h>

int main()
{
	unsigned int a=2147483648;       //언사인드로 오버플로우 방지 
	printf("%u",a);                   //unsigned 써줄때 "%u"써줘야(%d 아님) 
	return 0;
}
2147483648
--------------------------------

1028문제풀이
#include <stdio.h>

int main()
{
	unsigned int a;       //언사인드로 오버플로우 방지 
	scanf("%u",&a);
	printf("%u",a);                   //unsigned 써줄때 "%u"써줘 야(%d 아님) 
	return 0;
}
4294967295
4294967295
--------------------------------



//1029
실수 1개 입력받아 그대로 출력하기2(설명)
실수 1개를 입력받아 그대로 출력해보자.
(단, 입력되는 실수의 범위는 +- 1.7*10-308 ~ +- 1.7*10308 이다.)
https://codeup.kr/problem.php?id=1029
https://www.youtube.com/watch?v=cUDSe44sMQw&list=PLVXWi4DVy7TexhDLSS8L5xEMEOygreQPj&index=27

참고
float 데이터형을 사용하면 +- 3.4*10-38 ~ +- 3.4*1038 범위의 실수를 저장할 수 있다.
(float 로 선언하고 %f로 입력 받아 출력하면 된다.)

이 범위를 넘어가는(더 작거나 더 큰) 실수를 저장하기 위해서는
보다 큰 범위를 저장할 수 있는 다른 데이터형을 사용해야 정상적으로 저장시킬 수 있다.
double은 더 정확하게 저장할 수 있지만, float보다 2배의 저장 공간이 필요하다.

double 데이터형을 사용하면
+- 1.7*10-308 ~ +- 1.7*10308 범위의 실수를 저장할 수 있다.

참고
%.11lf 를 사용하면 소수점 이하 11자리까지 출력된다.


풀이
#include <stdio.h>

int main()
{
	double a;
	scanf("%lf", &a);                     //long float!!!
	printf("%.11lf", a);

    return 0;
}
3.14159265359785
3.14159265360
--------------------------------


//1030(정수 1개 입력받아 그대로 출력하기3(설명)) //long long int 사용하기
입력되는 정수의 범위는 -9223372036854775808 ~ +9223372036854775807 이다.
https://codeup.kr/problem.php?id=1030


#include <stdio.h>

int main()
{
	long long int n;
	scanf("%lld", &n);
	printf("%lld", n);
    return 0;
}
9223372036854775807
9223372036854775807
--------------------------------

long long int
vs
unsigned int 정수자리 2배로 크게 그러나 -못사용





//1031(10진 정수 1개 입력받아 8진수로 출력하기(설명))
https://codeup.kr/problem.php?id=1031
https://www.youtube.com/watch?v=wQOSXka4J8U&list=PLVXWi4DVy7TexhDLSS8L5xEMEOygreQPj&index=29
2,8,10,16진수 서로간 변환(위 주소 참고)
 
#include <stdio.h>

int main()
{
	int n;
	scanf("%d", &n);
	printf("%o", n);
	
	
	return 0;
 } 
 
 
 //1032
 10진 정수 입력받아 16진수로 출력하기1(설명)
 https://codeup.kr/problem.php?id=1032
 https://www.youtube.com/watch?v=8aw1kHkNn1w&list=PLVXWi4DVy7TexhDLSS8L5xEMEOygreQPj&index=31
 
 16진수(hexa decimal)
 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17
 0 1 2 3 4 5 6 7 8 9  A  B  C  D  E  F 10 11
 
 
 #include <stdio.h>

int main()
{
	int n;
	scanf("%d", &n);    //자꾸 ""를 빼먹는 실수 
	printf("%x", n);
	return 0;
 } 
 
 
 
#include <stdio.h>

int main()
{
	int n;
	scanf("%d", &n);    //자꾸 ""를 빼먹는 실수 
	printf("%x %X", n,n);                    //%x 는 소문자 %X는 대문자
	return 0;
 } 
 
255
ff FF
--------------------------------


//1033
10진 정수 입력받아 16진수로 출력하기2(설명)
https://codeup.kr/problem.php?id=1033
https://www.youtube.com/watch?v=lULi5KhRGso&list=PLVXWi4DVy7TexhDLSS8L5xEMEOygreQPj&index=32

#include <stdio.h>

int main()
{
	int n;
	scanf("%d", &n);    //자꾸 ""를 빼먹는 실수 
	printf("%X",n);
	return 0;
 } 
 
 
 
 //1034 : [기초-출력변환] 8진 정수 1개 입력받아 10진수로 출력하기(설명)
 https://www.youtube.com/watch?v=B9szeQR6EEA&list=PLVXWi4DVy7TexhDLSS8L5xEMEOygreQPj&index=34
 
 #include <stdio.h>

int main()
{
	int n;
	scanf("%o", &n);    //자꾸 ""를 빼먹는 실수 
	printf("%d",n);
	return 0;
 } 
 
 
 //1035 : [기초-출력변환] 16진 정수 1개 입력받아 8진수로 출력하기(설명)
 #include <stdio.h>

int main()
{
	int n;
	scanf("%x", &n);    //자꾸 ""를 빼먹는 실수 
	printf("%o",n);
	return 0;
 } 
 
 
 
 
 
 
 //1036 : [기초-출력변환] 영문자 1개 입력받아 10진수로 출력하기(설명)

참고
아스키 코드는
(ASCII, 미국표준코드, American Standard Code for Information Interchange)
영문자, 특수 문자 등을 저장할 때 사용하는 표준 코드이다.

#include <stdio.h>

int main()
{
	char t;
	scanf("%c", &t);
	printf("%d", t);
	return 0;
 } 
 
 
 
 
 //1037 : [기초-출력변환] 정수 입력받아 아스키 문자로 출력하기
 https://codeup.kr/problem.php?id=1037
 https://www.youtube.com/watch?v=aAKVIuLWF3o&list=PLVXWi4DVy7TexhDLSS8L5xEMEOygreQPj&index=36
 
 #include <stdio.h>

int main()
{
	int n;
	scanf("%d",&n);
	printf("%c",n);
 } 
65
A
--------------------------------
 
 //1038
 1038 : [기초-산술연산] 정수 2개 입력받아 합 출력하기1(설명)    //드디어 연산이!!
 https://www.youtube.com/watch?v=c5yTdw6JwAo&list=PLVXWi4DVy7TexhDLSS8L5xEMEOygreQPj&index=37


 
 
#include <stdio.h>

int main()
{
	long int n1, n2;                    //unsigned int 는 음수 못표현함 
	scanf("%ld %ld",&n1,&n2);
	printf("%ld", n1+ n2);
 } 
1073741824 -1073741824
0
--------------------------------






//1039
1039 : [기초-산술연산] 정수 2개 입력받아 합 출력하기2(설명)
단, 입력되는 정수는 -2147483648 ~ +2147483648 이다.                      //long long int 사용 %lld

https://codeup.kr/problem.php?id=1039
https://www.youtube.com/watch?v=uNB6ZK5Gdcg&list=PLVXWi4DVy7TexhDLSS8L5xEMEOygreQPj&index=38


#include <stdio.h>

int main()
{
	long long int n1,n2;
	scanf("%lld %lld", &n1,&n2);
	printf("%lld", n1+n2);
 } 
2147483648 2147483648
4294967296
--------------------------------




//1040
1040 : [기초-산술연산] 정수 1개 입력받아 부호 바꿔 출력하기(설명)
단, -2147483647 ~ +2147483647 범위의 정수가 입력된다.
https://codeup.kr/problem.php?id=1040
https://www.youtube.com/watch?v=uNB6ZK5Gdcg&list=PLVXWi4DVy7TexhDLSS8L5xEMEOygreQPj&index=38


#include <stdio.h>

int main()
{
	int n1;
	scanf("%d", &n1);
	printf("%d",-n1);
}







//1041 : [기초-산술연산] 문자 1개 입력받아 다음 문자 출력하기(설명)
https://codeup.kr/problem.php?id=1041
https://www.youtube.com/watch?v=OflrsTp3IkY&list=PLVXWi4DVy7TexhDLSS8L5xEMEOygreQPj&index=40


#include <stdio.h>

int main() 
{
	char a;
	scanf("%c",&a);
	printf("%c", a+1);
	return 0;
}

a
b
--------------------------------

//1042
1042 : [기초-산술연산] 정수 2개 입력받아 나눈 몫 출력하기(설명)
https://codeup.kr/problem.php?id=1042
https://www.youtube.com/watch?v=W-mid052sJE&list=PLVXWi4DVy7TexhDLSS8L5xEMEOygreQPj&index=41

정수 2개(a, b) 를 입력받아 a를 b로 나눈 몫을 출력해보자.
단, -2147483648 <= a <= b <= +2147483647, b는 0이 아니다.

참고
C언어에서 정수/정수 연산의 결과는 정수(몫)로 계산된다.
실수/정수, 정수/실수, (float)정수/정수, 정수/(float)정수 등의 연산 결과는 실수 값으로 계산된다.

(float)(정수/정수)는 정수/정수의 결과인 정수 값을 실수형(float)로 바꾸는 것으로,
계산 결과인 정수 값이 실수 형태로 변환되는 것이니 주의해야 한다.

정수/실수 계산결과가 자동으로 실수형으로 바뀌는 것을 묵시적 (데이터)형변환이라고 하고,
어떤 값이나 결과의 데이터형을 강제로 바꾸는 것을 명시적 (데이터)형변환이라고 한다.

int a;
scanf("%d", &a);
printf("%f", (float)a);

와 같이 실행하면, 정수로 저장되어 있는 값을 실수형(float)으로 명시적으로 변환하여 출력한다.



#include <stdio.h>

int main() 
{
	int a,b;
	scanf("%d %d", &a, &b);
	printf("%f", (float)a/b);
	
	return 0;
}
6 5
1.200000
--------------------------------



#include <stdio.h>

int main() 
{
	int a,b;
	scanf("%d %d", &a, &b);
	printf("%d %d", a/b);
	
	return 0;
}
6 5
1
--------------------------------




//1043
https://codeup.kr/problem.php?id=1043
https://www.youtube.com/watch?v=_IDf-lPu4n0&list=PLVXWi4DVy7TexhDLSS8L5xEMEOygreQPj&index=42

참고
C언어에서 정수%정수 연산의 결과는 나눈 나머지로 계산된다.

% 연산자(modulus, mod 연산) 수학자 가우스가 생각해낸 연산으로,
어떤 정수를 다른 정수로 나누고 난 후 남는 나머지를 계산하는 연산이다.

단, 음(-)이 아닌 정수에 대해서만 연산된다.


#include <stdio.h>

int main() 
{
	int a,b;
	scanf("%d %d", &a, &b);
	printf("%d", a%b);                    //%  나머지 구하기
	
	return 0;
}
10 3
1
--------------------------------


//1044
1044 : [기초-산술연산] 정수 1개 입력받아 1 더해 출력하기(설명)
https://codeup.kr/problem.php?id=1044
https://www.youtube.com/watch?v=_IDf-lPu4n0&list=PLVXWi4DVy7TexhDLSS8L5xEMEOygreQPj&index=42

++a, --a, a++, a-- 와 같이 어떤 변수의 앞이나 뒤에 붙여
변수에 저장되어있는 값을 1만큼 더하거나 빼주는 
를 증감연산자라고 한다.


#include <stdio.h>

int main() 
{
	long long int a;
	scanf("%lld", &a);
	printf("%lld\n", --a);            //먼저빼기  
	printf("%lld",a);
	return 0;
}
5
4
4
--------------------------------

#include <stdio.h>

int main() 
{
	long long int a;
	scanf("%lld", &a);
	printf("%lld\n", a--);            //나중 빼기  
	printf("%lld",a); 
	return 0;
}
5
5
4
--------------------------------


//1045 : [기초-산술연산] 정수 2개 입력받아 자동 계산하기)
https://codeup.kr/problem.php?id=1045
https://www.youtube.com/watch?v=ATqQ_UnVR6c&list=PLVXWi4DVy7TexhDLSS8L5xEMEOygreQPj&index=44


#include <stdio.h>

int main()
{
	int a,b;
	scanf("%d %d", &a,&b);
	printf("%lld\n", a+b);
	printf("%lld\n", a-b);
	printf("%lld\n", a*b);
	printf("%lld\n", a/b);
	printf("%lld\n", a%b);
	printf("%.2llf", (float)a/b);               //(double) 쓰면 long float 처럼 됨
	return 0;	
} 

합, 차, 곱, 몫, 나머지, 나눈 값




//1046 : [기초-산술연산] 정수 3개 입력받아 합과 평균 출력하기
https://codeup.kr/problem.php?id=1046

#include <stdio.h>

int main()
{
	int a,b,c;
	scanf("%d %d %d", &a,&b,&c);
	printf("%lld\n", (long long)a+b+c);            //(long long)없으면  2147483647 3개합이 2147483645 이걸로 뜸
	printf("%.1lf", ((double)a+b+c)/3);            //double 형식 ((double)a+b+c)/3
	return 0;	             //double 내 잘못 (double)(a+b+c)/3
} 
2147483647 2147483647 2147483647
6442450941
715827881.7
--------------------------------



*주의 
(double)(a+b+c)/3 코드업에서는 정상 실행 되나 데브c++에서는 이상함
((double)a+b+c)/3 코드업과 데브c++ 모두에서 정상 실행됨




//1047 : [기초-비트시프트연산] 정수 1개 입력받아 2배 곱해 출력하기(설명)
참고
*2 의 값을 출력해도 되지만,
정수를 2배로 곱하거나 나누어 계산해 주는 비트단위시프트연산자 <<, >>를 이용한다.

2진수 형태로 저장되어 있는 값들을 왼쪽(<<)이나 오른쪽(>>)으로
지정한 비트 수만큼 밀어주면 2배씩 늘어나거나 반으로 줄어드는데,

왼쪽 비트시프트(<<)가 될 때에는 오른쪽에 0이 주어진 개수만큼 추가되고,

오른쪽 비트시프트(>>)가 될 때에는
왼쪽에 0(0 또는 양의 정수인 경우)이나 1(음의 정수인 경우)이 개수만큼 추가된다.

범위(32비트)를 넘어서 이동되는 비트는 삭제된다.

예시
int a=10;
printf("%d", a<<1); //10을 2배 한 값인 20 이 출력된다.
printf("%d", a>>1); //10을 반으로 나눈 값인 5 가 출력된다.
printf("%d", a<<2); //10을 4배 한 값인 40 이 출력된다.
printf("%d", a>>2); //10을 반으로 나눈 후 다시 반으로 나눈 값인 2 가 출력된다.


#include <stdio.h>

int main()
{
	int a;
	scanf("%d", &a);
	printf("%d", a<<1);
	return 0;	
} 

1024
2048
---------------------------



//1048 : [기초-비트시프트연산] 한 번에 2의 거듭제곱 배로 출력하기(설명)
정수 2개(a, b)를 입력받아 a를 2의 b거듭제곱을 곱한 값으로 출력해보자.
#include <stdio.h>

int main()
{
	int a,b;
	scanf("%d %d", &a,&b);
	printf("%d", a<<b);
	return 0;	
} 



1049 : [기초-비교연산] 두 정수 입력받아 비교하기1(설명)
https://codeup.kr/problem.php?id=1049
https://www.youtube.com/watch?v=j2eULPg_ing&list=PLVXWi4DVy7TexhDLSS8L5xEMEOygreQPj&index=48

#include <stdio.h>

int main()
{
	int a,b;
	scanf("%d %d", &a,&b);
	printf("%d", a>b);
	return 0;
} 
15 17
0                                             //거짓이니까 0을 출력
--------------------------------

비교/관계연산자 > 는
왼쪽의 값이 오른쪽 값 보다 큰 경우 참(true)을 나타내는 정수값 1로 계산하고,
그 외의 경우에는 거짓(false)를 나타내는 정수값 0으로 계산한다.

비교/관계연산자는 >, <, >=, <=, ==(같다), !=(다르다) 6개가 있다.








1050 : [기초-비교연산] 두 정수 입력받아 비교하기2(설명)
https://codeup.kr/problem.php?id=1050
https://www.youtube.com/watch?v=lhJSQ0J-JJs&list=PLVXWi4DVy7TexhDLSS8L5xEMEOygreQPj&index=49


#include <stdio.h>

int main()
{
	int a,b;
	scanf("%d %d", &a,&b);
	printf("%d", a==b);
	return 0;
} 
0 0
1
--------------------------------


두 정수(a, b)를 입력받아
a와 b가 같으면 1을, 같지 않으면 0을 출력하는 프로그램을 작성해보자.

비교/관계연산자 == 는
두 개의 값이 같은 경우 참(true)을 나타내는 정수값 1로 계산하고,
다른 경우 거짓(false)를 나타내는 정수값 0으로 계산한다.






1051 : [기초-비교연산] 두 정수 입력받아 비교하기3(설명)
https://codeup.kr/problem.php?id=1051
https://www.youtube.com/watch?v=aMw6tpzLg78&list=PLVXWi4DVy7TexhDLSS8L5xEMEOygreQPj&index=50

#include <stdio.h>

int main()
{
	int a,b;
	scanf("%d %d", &a, &b);
	printf("%d", b>=a);
	
	return 0;
}
0 -1
0
--------------------------------



1052 : [기초-비교연산] 두 정수 입력받아 비교하기4(설명)

#include <stdio.h>

int main()
{

	int a,b;
	scanf("%d %d", &a, &b);
	printf("%d", a!=b);
	return 0;
}
0 1
1
--------------------------------





1053 : [기초-논리연산] 참 거짓 바꾸기(설명)

https://codeup.kr/problem.php?id=1053
https://www.youtube.com/watch?v=I7BXhxlrKjM&list=PLVXWi4DVy7TexhDLSS8L5xEMEOygreQPj&index=52
참, 거짓의 논리값(boolean value)인 불 값을 다루어주는 논리연산자는
!(not), &&(and), ||(or) 이 있다.

** 불 대수(boolean algebra)는 수학자 불이 만들어낸 것으로
참/거짓만 가지는 논리값과 그 연산을 다룬다.

예시
printf("%d", !0); //거짓의 반대, 즉 참인 1로 계산됨
printf("%d", !1); //참의 반대, 즉 거짓인 0으로 계산됨
printf("%d", !999); //참의 반대, 즉 거짓인 0으로 계산됨


#include <stdio.h>

int main()
{
	int a;
	scanf("%d",&a);
	printf("%d", !a);
	return 0;
}
1
0
--------------------------------




1054 : [기초-논리연산] 둘 다 참일 경우만 참 출력하기(설명)
https://codeup.kr/problem.php?id=1054
https://www.youtube.com/watch?v=P45G7IRv_cY&list=PLVXWi4DVy7TexhDLSS8L5xEMEOygreQPj&index=53

논리연산자 &&
이러한 논리연산을 AND 연산이라고도 부르고, · 으로 표시하거나 생략하며,
집합 기호로는 ∩(교집합, intersection)을 의미한다. 모두 같은 의미이다.
참, 거짓의 논리값(boolean value)인 불 값을 다루어주는 논리연산자는
!(not), &&(and), ||(or) 이 있다.


둘 다 참(1)일 경우에만 1을 출력하고, 그 외의 경우에는 0을 출력한다.


#include <stdio.h>

int main()
{
	int a, b;
	scanf("%d %d", &a,&b);
	printf("%d", a&&b);                                          //&& and
	return 0;
}
1 1
1
--------------------------------




1055 : [기초-논리연산] 하나라도 참이면 참 출력하기(설명)
https://codeup.kr/problem.php?id=1055
https://www.youtube.com/watch?v=EVweoEN-qbo&list=PLVXWi4DVy7TexhDLSS8L5xEMEOygreQPj&index=54
참고
논리연산자 || 는 주어진 2개의 논리값 중에 하나라도 참(1) 이면 1(참)로 계산하고,
그 외의 경우에는 0(거짓) 으로 계산한다.

** | 기호는 쉬프트를 누른 상태에서 백슬래시(\)를 누르면 나오는 기호로,
버티컬 바(vertical bar) 기호이다.

이러한 논리연산을 OR 연산이라고도 부르고,
+ 로 표시하며, 집합 기호로는 ∪(합집합, union)을 사용한다. 모두 같은 의미이다.

참, 거짓의 논리값(boolean value)인 불 값을 다루어주는 논리연산자는
!(not), &&(and), ||(or) 이 있다.

** 불 대수(boolean algebra)는 수학자 불이 만들어낸 것으로
참/거짓만 가지는 논리값과 그 연산을 다룬다.

예시
printf("%d", 0||0); //둘 다 거짓을 의미하므로 0이 계산되어 출력된다.


#include <stdio.h>

int main()
{
	int a, b;
	scanf("%d %d", &a,&b);
	printf("%d", a||b);
	return 0;
}
1 0
1
--------------------------------

하나라도 참일 경우 1을 출력하고, 그 외의 경우에는 0을 출력한다.





1056 : [기초-논리연산] 참/거짓이 서로 다를 때에만 참 출력하기(설명)                                //이거 진리표 그려보면 xor 연산 이해감
https://codeup.kr/problem.php?id=1056
https://www.youtube.com/watch?v=sh5S55FChgo&list=PLVXWi4DVy7TexhDLSS8L5xEMEOygreQPj&index=55
두 가지의 참(1) 또는 거짓(0)이 입력될 때,
참/거짓이 서로 다를 때에만 참을 출력하는 프로그램을 작성해보자.


참고
이러한 논리연산을 XOR(exclusive or, 배타적 논리합)연산이라고도 부른다.
집합의 의미로는 합집합에서 교집합을 뺀 것을 의미한다. 모두 같은 의미이다.

논리연산자는 사칙연산자와 마찬가지로 여러 번 중복해서 사용할 수 있는데,
연산의 순서를 만들어주기 위해 괄호 ( )를 사용해 묶어 주면 된다.

수학에서는 괄호, 중괄호, 대괄호를 사용하지만 C언어에서는 소괄호 ( )만을 사용한다.

예시
printf(“%d”, (a&&!b)||(!a&&b)); //참/거짓이 서로 다를 때에만 1로 계산



#include <stdio.h>

int main()
{
	int a, b;
	scanf("%d %d", &a,&b);
	printf("%d", (a&&!b)||(!a&&b));                               //printf("%d", (a&&!b)||(!a&&b));
	return 0;
}
1 1
0
--------------------------------





1057 : [기초-논리연산] 참/거짓이 서로 같을 때에만 참 출력하기
https://codeup.kr/problem.php?id=1057

참/거짓이 서로 같을 때에만 참이 계산

#include <stdio.h>

int main()
{
	int a, b;
	scanf("%d %d", &a,&b);
	printf("%d", a==b);                                     //printf("%d", a==b);
	return 0;
}



1058 : [기초-논리연산] 둘 다 거짓일 경우만 참 출력하기
https://codeup.kr/problem.php?id=1058
모두 거짓일 때에만 참이 계산

not A and not B = not(A or B)


#include <stdio.h>

int main()
{
	int a, b;
	scanf("%d %d", &a,&b);
	printf("%d", !(a||b));
	return 0;
}



//	printf("%d", !(a||b));
//	printf("%d", !a&&!b);





1059 : [기초-비트단위논리연산] 비트단위로 NOT 하여 출력하기(설명)
https://codeup.kr/problem.php?id=1059
https://www.youtube.com/watch?v=VjrT8fsJi3U&list=PLVXWi4DVy7TexhDLSS8L5xEMEOygreQPj&index=58

입력 된 정수를 비트단위로 참/거짓을 바꾼 후 정수로 출력해보자.
비트단위(bitwise)연산자 ~ 를 붙이면 된다.(~ : tilde, 틸드라고 읽는다.)


** 비트단위(bitwise) 연산자는,
~(bitwise not), &(bitwise and), |(bitwise or), ^(bitwise xor),
<<(bitwise left shift), >>(bitwise right shift)
가 있다.

예를 들어 1이 입력되었을 때 저장되는 1을 32비트 2진수로 표현하면
        00000000 00000000 00000000 00000001 이고,
~1은 11111111 11111111 11111111 11111110 가 되는데 이는 -2를 의미한다.


예시
int a=1;
printf("%d", ~a); //-2가 출력된다.

참고
컴퓨터에 저장되는 모든 데이터들은 2진수 형태로 바뀌어 저장된다.
0과 1로만 구성되는 비트단위들로 변환되어 저장되는데,
양의 정수는 2진수 형태로 바뀌어 저장되고,
음의 정수는 "2의 보수 표현"방법으로 저장된다.

예를 들어 int형(4바이트(byte), 32비트)으로 선언된 변수에 양의 정수 5를 저장하면
5의 2진수 형태인 101이 32비트로 만들어져
00000000 00000000 00000000 00000101
로 저장된다.(공백은 보기 편하도록 임의로 분리)

int 형의 정수 0은
00000000 00000000 00000000 00000000

그리고 -1은 0에서 1을 더 빼고 32비트만 표시하는 형태로
11111111 11111111 11111111 11111111 로 저장된다.

-2는 -1에서 1을 더 빼면 된다.
11111111 11111111 11111111 11111110 로 저장된다.

그래서 int 형으로 선언된 변수에는 최소 -2147483648 을 의미하는
10000000 00000000 00000000 00000000 부터

최대 +2147483647 을 의미하는
01111111 11111111 11111111 11111111 로 저장될 수 있는 것이다.

그렇다면 -2147483648
10000000 00000000 00000000 00000000 에서 1을 더 뺀다면?

01111111 11111111 11111111 11111111 이 된다.
즉 -2147483649 가 아닌 +2147483647 이 되는 것이다.

이러한 것을 오버플로우(overflow, 넘침)라고 한다.

이러한 내용을 간단히 표시하면, 정수 n이라고 할 때,

~n = -n - 1
-n = ~n + 1 과 같은 관계로 표현된다.

이 관계를 그림으로 그려보면 마치 원형으로 수들이
상대적으로 배치된 것과 같다.



#include <stdio.h>

int main()
{
	int a;
	scanf("%d", &a);
	printf("%d", ~a);                                    //	printf("%d", ~a);
	
	return 0;
}
2
-3
--------------------------------




1060 : [기초-비트단위논리연산] 비트단위로 AND 하여 출력하기(설명)
https://codeup.kr/problem.php?id=1060
https://www.youtube.com/watch?v=1n05lfbENa4&list=PLVXWi4DVy7TexhDLSS8L5xEMEOygreQPj&index=59


입력된 정수 두 개를 비트단위로 and 연산한 후 그 결과를 정수로 출력해보자.
비트단위(bitwise)연산자 &를 사용하면 된다.(and, ampersand, 앰퍼센드라고 읽는다.)


** 비트단위(bitwise)연산자는,
~(bitwise not), &(bitwise and), |(bitwise or), ^(bitwise xor),
<<(bitwise left shift), >>(bitwise right shift)
가 있다.

예를 들어 3과 5가 입력되었을 때를 살펴보면
3       : 00000000 00000000 00000000 00000011
5       : 00000000 00000000 00000000 00000101
3 & 5 : 00000000 00000000 00000000 00000001
이 된다.

비트단위 and 연산은 두 비트열이 주어졌을 때,
둘 다 1인 부분의 자리만 1로 만들어주는 것과 같다.

이 연산을 이용하면 어떤 비트열의 특정 부분만 모두 0으로도 만들 수 있는데
192.168.0.31   : 11000000.10101000.00000000.00011111
255.255.255.0 : 11111111.11111111.11111111.00000000

두 개의 ip 주소를 & 연산하면
192.168.0.0 : 110000000.10101000.0000000.00000000 을 계산할 수 있다.

실제로 이 계산은 네트워크에 연결되어 있는 두 개의 컴퓨터가 데이터를 주고받기 위해
같은 네트워크에 있는지 아닌지를 판단하는데 사용된다.

이러한 비트단위 연산은 빠른 계산이 필요한 그래픽처리에서
마스크연산(특정 부분을 가리고 출력하는)을 수행하는 데에도 효과적으로 사용된다.


#include <stdio.h>

int main()
{
	int a,b;
	scanf("%d %d", &a, &b);
	printf("%d", a&b);                                  //	printf("%d", a&b);
	return 0;
}

3 5
1
--------------------------------


1061 : [기초-비트단위논리연산] 비트단위로 OR 하여 출력하기(설명)
https://codeup.kr/problem.php?id=1061
https://www.youtube.com/watch?v=HCtIZTJmIi4&list=PLVXWi4DVy7TexhDLSS8L5xEMEOygreQPj&index=60

예를 들어 3과 5가 입력되었을 때를 살펴보면
3     : 00000000 00000000 00000000 00000011
5     : 00000000 00000000 00000000 00000101
3 | 5 : 00000000 00000000 00000000 00000111
이 된다.

비트단위 or 연산은 둘 중 하나라도 1인 자리를 1로 만들어주는 것과 같다.


#include <stdio.h>

int main()
{
	int a,b;
	scanf("%d %d", &a, &b);
	printf("%d", a|b);
	return 0;
}
3 5
7
--------------------------------




1062 : [기초-비트단위논리연산] 비트단위로 XOR 하여 출력하기(설명)
https://codeup.kr/problem.php?id=1062
https://www.youtube.com/watch?v=HCtIZTJmIi4&list=PLVXWi4DVy7TexhDLSS8L5xEMEOygreQPj&index=61
비트단위(bitwise) 연산자 ^(xor, circumflex/caret, 서컴플렉스/카릿)

** 주의 ^은 수학식에서 거듭제곱(power)을 나타내는 기호와 모양은 같지만,
C언어에서는 전혀 다른 배타적 논리합(xor, 서로 다를 때 1)의 의미를 가진다.               //배타적 논리합(xor, 서로 다를 때 1)

예를 들어 3과 5가 입력되었을 때를 살펴보면
3       : 00000000 00000000 00000000 00000011
5       : 00000000 00000000 00000000 00000101
3 ^ 5 : 00000000 00000000 00000000 00000110
이 된다.
이러한 비트단위 연산은 빠른 계산이 필요한 그래픽처리에서도 효과적으로 사용된다.

구체적으로 설명하자면,
두 장의 이미지가 겹쳐졌을 때 색이 서로 다른 부분만 처리할 수 있다.              //색이 서로 다른 부분만 처리할 수 있다.
배경이 되는 그림과 배경 위에서 움직이는 그림이 있을 때,
두 그림에서 차이만 골라내 배경 위에서 움직이는 그림의 색으로 바꿔주면            //두 그림에서 차이만 골라내 배경 위에서 움직이는 그림의 색으로 바꿔주
전체 그림을 구성하는 모든 점들의 색을 다시 계산해 입히지 않고
보다 효과적으로 그림을 처리할 수 있게 되는 것이다.
비행기 슈팅게임 등을 상상해보면 된다.


두 정수를 비트단위(bitwise)로 xor 계산을 수행한 결과를 10진수로 출력한다.


#include <stdio.h>
int main() 
{
	int a,b;
	scanf("%d %d", &a, &b);
	printf("%d", a^b);                                            //	printf("%d", a^b);
	
	
	return 0;
}
3 5
6
--------------------------------




1063 : [기초-삼항연산] 두 정수 입력받아 큰 수 출력하기(설명)
https://codeup.kr/problem.php?id=1063
https://www.youtube.com/watch?v=YLWRp1fRnGc&list=PLVXWi4DVy7TexhDLSS8L5xEMEOygreQPj&index=62

3항 연산자 ?
예를 들어
123 > 456 ? 0 : 1
과 같은 표현식은 123 > 456 의 비교연산 결과가 거짓이므로 1이 된다.

예시
printf("%d", a>b ? a:b); //두 값 중 큰 값이 출력된다.

예시 코드는 a>b 의 결과가 참(1)이면 (a>b ? a:b)의 결과는 a가 되고,
거짓(0)이면 (a>b ? a:b)의 결과는 b가 된다.


두 정수 중 큰 값을 10진수로 출력한다.



#include <stdio.h>
int main() 
{
	int a,b;
	scanf("%d %d", &a,&b);
	printf("%d",a>b ? a:b);
	return 0;
}
123 456
456
--------------------------------


printf("%d",a>b ? a+5:b+5);
3 5
10
--------------------------------
연산을 할 수도 있다.


a>b ? printf("%d", a) : printf("%d",b);
3 5
5
--------------------------------



1064 : [기초-삼항연산] 정수 3개 입력받아 가장 작은 수 출력하기(설명)
https://codeup.kr/problem.php?id=1064
https://www.youtube.com/watch?v=6qktZbRkeJo&list=PLVXWi4DVy7TexhDLSS8L5xEMEOygreQPj&index=63


#include <stdio.h>
int main() 
{
	int a,b,c;
	scanf("%d %d %d", &a,&b, &c);
	printf("%d", (a>b ? b:a)>c? c:(a>b ? b:a));                 //(a>b ? b:a)>c? c:(a>b ? b:a)
	return 0;
}

3 -1 5
-1
--------------------------------





1065 : [기초-조건/선택실행구조] 정수 3개 입력받아 짝수만 출력하기(설명)
https://codeup.kr/problem.php?id=1065
https://www.youtube.com/watch?v=GfYpzTBbOq0&list=PLVXWi4DVy7TexhDLSS8L5xEMEOygreQPj&index=64

세 정수 a, b, c가 입력되었을 때, 짝수만 출력해보자.


공부
#include <stdio.h>
int main() 
{
	int a;
	scanf("%d", &a);
	if(a%2==0);
	{
	printf("홀수입니다");
	}
	return 0;
}

1 
홀수입니다.
--------------------------------



#include <stdio.h>
int main() 
{
	int a;
	scanf("%d", &a);
	printf(a%2==0 ? "짝수입니다.": "홀수입니다.");
	return 0;
}
2
짝수입니다.
--------------------------------





#include <stdio.h>
int main() 
{
	int a,b,c;
	scanf("%d %d %d", &a, &b, &c);
	if(a%2==0) {printf("%d\n",a);}
	if(b%2==0) {printf("%d\n",b);}
	if(c%2==0) {printf("%d\n",c);}
	return 0;
}
1 2 4
2
4

--------------------------------




1066 : [기초-조건/선택실행구조] 정수 3개 입력받아 짝/홀 출력하기(설명)
https://codeup.kr/problem.php?id=1066
https://www.youtube.com/watch?v=U8ve4BJC2oE&list=PLVXWi4DVy7TexhDLSS8L5xEMEOygreQPj&index=65


if else 써보란문제인데
if else 안쓴 내 코드

#include <stdio.h>
int main()
{
	int a,b,c;
	scanf("%d %d %d", &a, &b, &c);
	printf("%s\n", a%2==0 ? "even" : "odd");                  //printf("%s\n", a%2==0 ? "even" : "odd");
	printf("%s\n", b%2==0 ? "even" : "odd");
	printf("%s", c%2==0 ? "even" : "odd");
	return 0;
}
1 2 8
odd
even
even
--------------------------------

#include <stdio.h>
int main()
{
	int a,b,c;
	scanf("%d %d %d", &a, &b, &c);

	if(a%2==0) {printf("%s\n", "even");}                	//if(a%2==0) {printf("%s\n", "even");}
	else {printf("%s\n", "odd");}	                        //else {printf("%s\n", "odd");}
	if(b%2==0) {printf("%s\n", "even");}
	else {printf("%s\n", "odd");}
	if(c%2==0) {printf("%s", "even");}
	else {printf("%s", "odd");}

	return 0;
}





1067 : [기초-조건/선택실행구조] 정수 1개 입력받아 분석하기(설명)
https://codeup.kr/problem.php?id=1067
https://www.youtube.com/watch?v=U8ve4BJC2oE&list=PLVXWi4DVy7TexhDLSS8L5xEMEOygreQPj&index=66


출력
입력된 정수에 대해
첫 줄에 minus 나 plus 를 출력하고,
두 번째 줄에 odd 나 even 을 출력한다.

중첩 (nested) 사용하지 않은 코드

#include <stdio.h>
int main()
{
	int a;
	scanf("%d", &a);

	printf("%s\n", a>0 ? "plus":"minus");
	printf("%s\n", a%2==0 ? "even" : "odd");
	return 0;
}



중첩 사용한 코드(if 안에 if) 내코드
#include <stdio.h>
int main()
{
	int a;
	scanf("%d", &a);
	
	if(a>0)
	{
	printf("%s\n", "plus");
		if(a%2==0){printf("%s", "even");}
		else{printf("%s","odd");}
	}
	else
	{
		printf("%s\n", "minus");
		if(a%2==0){printf("%s", "even");}
		else{printf("%s","odd");}
	}
	return 0;
}
-2147483648
minus
even
--------------------------------



선생님 코드
#include <stdio.h>
int main()
{
	int a;
	scanf("%d", &a);

	if(a>0) printf("%s\n", "plus");
	else printf("%s\n", "minus");
	
	if(a%2==0) printf("%s", "even");
	else printf("%s", "odd"); 
	return 0;
}
-2147483648
minus
even
--------------------------------


선생님 코드 2
#include <stdio.h>
int main()
{
	int a;
	scanf("%d", &a);

	if(a<0) 
	{
		if(a%2==0) {printf("%s", "minus\neven");}
		else {printf("%s", "minus\nodd");}
	}
	else
	{
		if(a%2==0) {printf("%s", "plus\neven");}
		else {printf("%s", "plus\nodd");}
	}
	return 0;
}
75
plus
odd
--------------------------------






1068 : [기초-조건/선택실행구조] 정수 1개 입력받아 평가 출력하기(설명)
https://codeup.kr/problem.php?id=1068&rid=0
https://www.youtube.com/watch?v=Z4NW36bFLAQ&list=PLVXWi4DVy7TexhDLSS8L5xEMEOygreQPj&index=67

점수(정수, 0 ~ 100)를 입력받아 평가를 출력해보자.


평가 기준
점수 범위 : 평가
 90 ~ 100 : A
 70 ~   89 : B
 40 ~   69 : C
   0 ~   39 : D
로 평가되어야 한다.


순수 내코드

#include <stdio.h>
int main()
{
	int a;
	scanf("%d", &a);
	
	if(a>=90 and a<=100)
	{printf("A");}
	else{
		if(a>=70 and a<=89){printf("B");}
		else
			{
			if(a>=40 and a<=69){printf("C");}
			else
				{
				if(a>=0 and a<=39){printf("D");}
				}
			}
		}
	
	return 0;
}
73
B
--------------------------------


#include <stdio.h>
int main()
{
	int a;
	scanf("%d", &a);
	
	if(a>=90 and a<=100){printf("A");}                            //if(a>=90 and a<=100){printf("A");}
	else if(a>=70 and a<=89){printf("B");}                        //else if(a>=70 and a<=89){printf("B");}    //elif의 사용!
	else if(a>=40 and a<=69){printf("C");}
	else if(a>=0 and a<=39){printf("D");}
	
	return 0;
}
73
B
--------------------------------






1069 : [기초-조건/선택실행구조] 평가 입력받아 다르게 출력하기(설명)
https://codeup.kr/problem.php?id=1069
https://www.youtube.com/watch?v=GnZ0f1qk0NE&list=PLVXWi4DVy7TexhDLSS8L5xEMEOygreQPj&index=68


case 사용!!!!!!


참고
조건/선택문을 복합적으로 구성해 출력할 수도 있지만,

switch(정수값)
{
  case 'A': //문자 'A'가 정수값 65('A'의 아스키 값)로 저장되기 때문에 가능하다.
    ...;
    break;
  case 'B':
    ...;
    break;
  case 'C':
    ...;
    break;
  default:
    ...;
}

위와 같은 switch( ) ... case... break; 제어문을 사용할 수 있다.

** break; 를 사용하지 않으면 이후의 명령들도 계속 실행된다.
default: 는 제시된 case 를 제외한 나머지 모든 경우에 실행된다.
switch( ) 에 주어지는 값은 “정수"값만 가능하며,
문자도 아스키코드 정수값이기 때문에 가능하다.



A : best!!!
B : good!!
C : run!
D : slowly~

#include <stdio.h>
int main()
{
	char a;
	scanf("%c", &a);
	switch(n)                                            //switch(n)
	{
	case'A':printf("best!!!"); break;
	case'B':printf("good!!"); break;
	case'C':printf("run!"); break;
	case'D':printf("slowly~"); break;                    //case'D':printf("slowly~"); break;        
	default:printf("what?"); break;                      //default:printf("what?"); break;
	}

	return 0;
}
C
run!
--------------------------------




1070 : [기초-조건/선택실행구조] 월 입력받아 계절 출력하기(설명)
https://codeup.kr/problem.php?id=1070
https://www.youtube.com/watch?v=iv0OVmV2_4U&list=PLVXWi4DVy7TexhDLSS8L5xEMEOygreQPj&index=69

월이 입력될 때 계절 이름이 출력되도록 해보자.

예
월 : 계절 이름
12, 1, 2 : winter
  3, 4, 5 : spring
  6, 7, 8 : summer
  9, 10, 11 : fall

참고
swtich( ).. case ... break; 제어문에서
break;를 제거하면 멈추지 않고 다음 명령이 실행되는 특성을 이용할 수 있다.

switch(a)
{
  ...
  case 3:
  case 4:
  case 5:
    printf("spring");
  break;
  ...
}
로 작성하면, 3, 4, 5가 입력되었을 때 모두 "spring"이 출력된다.

** 12, 1, 2 는 어떻게 처리해야 할지 여러 가지로 생각해 보아야 한다.



#include <stdio.h>
int main()
{
    int n;
    scanf("%d", &n);

    switch(n)
    {
	case 12:
	case 1:
	case 2:
	    printf("winter");
	    break;

	case 3:
	case 4:
	case 5:
	    printf("spring");
	    break;

	case 6:
	case 7:
	case 8:
	    printf("summer");
	    break;

	case 9:
	case 10:
	case 11:
	    printf("fall");
	    break;
	
	default:
	    printf("잘못된 입력입니다.");
    }
    return 0;
}

7
summer
--------------------------------






1071 : [기초-반복실행구조] 0 입력될 때까지 무한 출력하기1(설명)
https://codeup.kr/problem.php?id=1071
https://www.youtube.com/watch?v=FP4dAuJF0bI&list=PLVXWi4DVy7TexhDLSS8L5xEMEOygreQPj&index=70

0이 아니면 입력된 정수를 출력하고, 0이 입력되면 출력을 중단해보자.
while( ), for( ), do~while( ) 등의 반복문을 사용할 수 없다.

참고
goto 명령문을 사용하면 간단한 반복 실행을 만들 수 있다.
반복 실행 부분을 빠져나오기 위해(즉 무한 반복을 방지하기 위해)
반복 실행 되는 도중에 조건을 검사해야 한다.

goto 이름:
이 명령은 이름: 이 작성된 곳으로 프로그램의 실행 흐름을 바꾸어 준다.

"이름:" 과 같이 콜론(:)이 붙어있는 부분을 이름표(label, 레이블)라고 한다.
레이블은 특별한 선언 없이 사용할 수 있으며 언더바(_)나 영문자로 시작하면 된다.
레이블은 한 단어처럼 공백없이 모두 붙여 써야 한다.

switch( ) ... case ... : ... break; 에서
case ... : 도 일종의 레이블이라고 생각할 수 있다.

goto 레이블:
명령을 사용하면 반복되는 부분을 여러 개 자유롭게 만들 수 있다.

goto 명령은 반복 실행을 만들어낼 수 있는 가장 간단한 명령이지만,
복잡하게(스파게티 코드) 사용하는 경우, 이해가 어렵고 오류가 생기기 쉽다.


예시
  int n;
reload: //레이블은 콜론(:)으로 끝내고, 일반적으로 들여쓰기를 하지 않는다.
  scanf("%d", &n);
  printf("%d", n);
  if(n!=0) goto reload; //reload라고 적혀있는 레이블로 실행 이동



#include <stdio.h>

int main()
{
	int n;
reload:              
	scanf("%d", &n);

	if(n!=0)
	{
		printf("%d\n",n);
		goto reload;
	
	}

	return 0;
}
7 4 2 3 0 1 5 6 9 10 8
7
4
2
3

--------------------------------





1072 : [기초-반복실행구조] 정수 입력받아 계속 출력하기(설명)
https://codeup.kr/problem.php?id=1072
https://www.youtube.com/watch?v=HOYzmQlUOko&list=PLVXWi4DVy7TexhDLSS8L5xEMEOygreQPj&index=71

n개의 입력된 정수를 순서대로 출력해보자.


++a, --a, a++, a-- 와 같이 어떤 변수의 앞이나 뒤에 붙여
변수에 저장되어있는 값을 1만큼 더하거나 빼주는 
를 증감연산자라고 한다.



#include <stdio.h>

int main()
{
	int n,m;
	scanf("%d", &n);
reget:
	scanf("%d", &m);
	printf("%d\n",m);	
	if(--n != 0)                       //--n   n에서 1빼기 연산한 후 n이 0과 같은지 비교
	 
	
	{
	goto reget;
}
	return 0;
}
 
 
 
 
 	//if(n-- != 0)                       //n이 0과 같은지 비교후에 n에서 1빼기 연산함.
	                                    //따라서 연산이 안끝남 / 0하나 더 쳐줘
					    
					    
					    



1073 : [기초-반복실행구조] 0 입력될 때까지 무한 출력하기2(설명)
https://codeup.kr/problem.php?id=1073
https://www.youtube.com/watch?v=_0pAFWZbT-o&list=PLVXWi4DVy7TexhDLSS8L5xEMEOygreQPj&index=72


while 반복문 설명

0이 아니면 입력된 정수를 출력하고, 0이 입력되면 출력을 중단해보자.


if(조건)
{ //코드블록
  ...;
}
구조를 사용하면 주어진 조건이 참인 경우만 코드블록 부분이 실행된다.

비슷하게 어떤 조건에 따라 반복적으로 실행시킬 때에는 if를 while로 바꾸기만 하면

while(조건)
{ //코드블록
  ...;
}

와 같은 방법으로 코드블록의 내용을 반복적으로 수행시킬 수 있다.

수행되는 과정은
1. 먼저 조건을 검사한다.
2. 코드블록을 실행한다.
3. 다시 조건을 검사한다.
4. 코드블록을 실행한다.
...

와 같이 주어진 조건이 참인 동안 계속적으로 반복 실행한다.
이렇게 while(조건){...}을 이용하면 goto 명령을 사용하지 않고
반복을 만들어낼 수 있다.

예시
int n=1; //처음 조건 검사를 넘어가기 위해 0이 아닌 값 입력
while(n!=0)
{
  scanf("%d", &n);
  printf("%d", n);
}



while 반복문 구현전 label 사용한 goto 최종 복습 구현 
#include <stdio.h>

int main()
{
	int n;
	label:
	scanf("%d", &n);
		printf("%d\n", n);	
	if(--n !=0)
	{

		goto label; 
	}
	return 0;
}
5 4 3 2 1
5
4
3
2
1

--------------------------------
 



while  반복문 사용하기

선생님 코드
#include <stdio.h>

int main()
{
	int n;
	scanf("%d", &n);                                //scanf 를 while 앞에 넣어주는 아이디어
	while(n !=0)
	{

		printf("%d\n", n);
			scanf("%d", &n);
	}
	return 0;
}



선생님 코드2
#include <stdio.h>

int main()
{
	int n=1;

	while(n!=0)
	{
		scanf("%d", &n);
		if(n==0)break;                     //	if(n==0)break;       while문에서 if break를 쓰면 빠져나갈수있다.
		printf("%d\n", n);

	}
	return 0;
}
7 4 2 3 0 1 5 6 9 10 8
7
4
2
3

--------------------------------




#include <stdio.h>

int main()
{
	int n=1;

	while(1)                              //	while(1)   이렇게 할거면 반드시 break 있어야 
	{
		scanf("%d", &n);
		if(n==0)break;
		printf("%d\n", n);

	}
	return 0;
}
7 4 2 3 0 1 5 6 9 10 8
7
4
2
3

--------------------------------







1074 : [기초-반복실행구조] 정수 1개 입력받아 카운트다운 출력하기1(설명)
https://codeup.kr/problem.php?id=1074
https://www.youtube.com/watch?v=N4KJFRksZQc&list=PLVXWi4DVy7TexhDLSS8L5xEMEOygreQPj&index=73



#include <stdio.h>

int main()
{
	int n;
	scanf("%d", &n);
	
	while(n!=0){
	printf("%d\n", n);
	n--;                                            //n=n-1; 과 같음(n--;)
	}
}
5
5
4
3
2
1

--------------------------------


1075 : [기초-반복실행구조] 정수 1개 입력받아 카운트다운 출력하기2(설명)
https://codeup.kr/problem.php?id=1075
https://www.youtube.com/watch?v=KDqf9hvWC-4&list=PLVXWi4DVy7TexhDLSS8L5xEMEOygreQPj&index=74

#include <stdio.h>

int main()
{
	int n;
	scanf("%d", &n);
	
	while(n!=0){                        //=  while(n > 0){       //=  while(n >= 1){
	
	n--;
	printf("%d\n", n);                   //여기 두줄은 printf("%d\n", --n);  이 코드로 대체 가능
	
	}
}
5
4
3
2
1
0

--------------------------------




1076 : [기초-반복실행구조] 문자 1개 입력받아 알파벳 출력하기(설명)
https://codeup.kr/problem.php?id=1076




do while 문 안쓴 순수 내코드

#include <stdio.h>

int main()
{
	char t, var='a';
	scanf("%c", &t);
	
	while(var<=t){printf("%c\n",var++);}
	return 0;
}
f
a
b
c
d
e
f

--------------------------------




복합대입연산자
+=, -=, *=, /=, %= ...

아래는 서로 다른 형태이지만 같은 기능을 하는 코드들이다.
n++;
n=n+1;
n+=1;



do while 문
do
{ //코드블록
  ...
}while(조건);
구조는 while( ) { ... } 과 유사한 반복 실행 구조를 만들 수 있는데
다른 점은 무조건 한 번은 실행된다는 것이다. 마지막에 세미콜론을 반드시 붙여야 한다.    //do while 문은 무조건 한 번은 실행된다(while 문과의 차이점)

예시
char x, t='a';
scanf("%c", &x);
do
{
  printf("%c ", t);
  t+=1; //t+=1; 는 t=t+1과 같은 의미이다.
}while(t<'z'+1); //의미 : t의 값이 'z'보다 작은 동안 반복된다.




do while문 공부한 순수? 내코드
#include <stdio.h>

int main()
{
	int c, t='a';
	scanf("%c", &c);
	do
	{
		printf("%c\n",t++);
	}
	while(t<=c);
	return 0;
}
f
a
b
c
d
e
f

--------------------------------


1077 : [기초-반복실행구조] 정수 1개 입력받아 그 수까지 출력하기(설명)
https://codeup.kr/problem.php?id=1077
https://www.youtube.com/watch?v=aVKC22g-nwM&list=PLVXWi4DVy7TexhDLSS8L5xEMEOygreQPj&index=75
https://blog.naver.com/gre******/222586174816                                           //내불로그 참고


while do while 마지막으로 for문

참고
for((반복전 실행/준비내용); (조건 검사 내용); (한번 실행한 후 처리할 작업))
{ //코드블록
  ...
}
구조는 while( ) {...}, do {...} while( ); 구조와 같이
어떤 작업을 반복적으로 수행할 때 가장 일반적으로 많이 사용하는 구조이다.

while( ) {...}, do {...} while( ); 과 다르게
반복을 위한 초기화/준비, 조건검사, 반복 후 증감 등을 한 번에 작성할 수 있다.




#include <stdio.h>

int main()
{
	int i=0, n;
	scanf("%d", &n);
	
	for(i=0;i<=n;i++)  {printf("%d\n", i);}                // for(i=0;i<=n;i++)    for 문에서 내용들 ';' 으로 구분 유의
	return 0;
}
4
0
1
2
3
4

--------------------------------





1078 : [기초-종합] 짝수 합 구하기(설명)
https://codeup.kr/problem.php?id=1078
https://www.youtube.com/watch?v=Ot8godCzXJo&list=PLVXWi4DVy7TexhDLSS8L5xEMEOygreQPj&index=77

참고
while( ) {...}, do {...} while( );, for(...; ...; ...) {...} 등의 반복문은 형태만 다르
고, 똑같은 성능을 발휘한다. 필요에 따라 편리한 것으로 골라 사용하면 된다.



#include <stdio.h>

int main()
{
	int sum=0,i,n;
	scanf("%d", &n);
	for (i=0; i<=n; i++)                   //선생님은 i=1이라고 하셨는데 i=0이라고 해도 무방한듯
	{
		if(i%2==0){sum+=i;}              //{sum+=i;} 에서 세미콜론 위치 틀렸었음 
	}                                    //sum++i; 이런 구문은 없음 
	printf("%d", sum);    
	return 0;
}
5
6
--------------------------------


while문을 사용한 짝수 합 구하기

#include <stdio.h>

int main()
{
	int sum=0;
	int i=1, n;
	scanf("%d", &n);
	while(i<=n)
	{
		if(i%2==0) sum = sum+i;
		i=i+1;
	 } 
	printf("%d", sum);
	return 0;
}
5
6
--------------------------------


do while문을 이용한 구문
#include <stdio.h>

int main()
{
	int sum=0;
	int i=1, n;
	scanf("%d", &n);
	do
	{
		if(i%2==0) sum = sum+i;
		i=i+1;
	 } 
	while(i<=n);
	printf("%d", sum);
	return 0;
}
5
6
--------------------------------




1079 : [기초-종합] 원하는 문자가 입력될 때까지 반복 출력하기
https://codeup.kr/problem.php?id=1079
https://www.youtube.com/watch?v=oUtf3Un3Zos&list=PLVXWi4DVy7TexhDLSS8L5xEMEOygreQPj&index=78

#include <stdio.h>

int main()
{
	char c;
	while(c!='q')
	{
		scanf("%c", &c);
		printf("%c", c);
	}
	return 0;
}
x b k d l q g a c
x b k d l q                                        //\n 써주면 표현에러 라고 뜸.. 왠지?
--------------------------------




또 if break 이용한 코드(결과는 같음)

#include <stdio.h>

int main()
{
	char c;
	while(1)
	{
		scanf("%c", &c);
		printf("%c", c);
		if(c=='q') break;
	}
	return 0;
}





꿀팁 공부

#include <stdio.h>

int main()
{
	char c;
	while(1)
	{
		scanf("%c", &c);                 // "%c" 를 공백추가해서 "%c "로 하면 아래 결과 문제 해결가능 
		printf("%c\n", c);
		if(c=='q') break;
	}
	return 0;
}


//"%c" 로했을때 결과
x b k d l q g a c
x

b

k

d

l

q

--------------------------------


//"%c " 로했을때 결과
x b k d l q g a c
x
b
k
d
l
q

--------------------------------





if else 사용한 코드

#include <stdio.h>

int main()
{
	char c;
	while(1)
	{
		scanf("%c ", &c);                 // "%c" 를 공백추가해서 "%c "로 하면 아래 결과 문제 해결가능 
		
		if(c!='q')
		{
			printf("%c\n", c);
		}
		else
		{
			printf("%c\n", c);
			return 0;                                       //return 위치 유심히 보기 !!!

		}
	}
}







1080 : [기초-종합] 언제까지 더해야 할까?
https://codeup.kr/problem.php?id=1080
https://www.youtube.com/watch?v=mEjbrE5m11s&list=PLVXWi4DVy7TexhDLSS8L5xEMEOygreQPj&index=81
